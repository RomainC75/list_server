// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: list.sql

package db

import (
	"context"
)

const getlist = `-- name: Getlist :one
SELECT id, name, user_id FROM lists WHERE id = $1
`

func (q *Queries) Getlist(ctx context.Context, id int32) (List, error) {
	row := q.db.QueryRowContext(ctx, getlist, id)
	var i List
	err := row.Scan(&i.ID, &i.Name, &i.UserID)
	return i, err
}

const listlists = `-- name: Listlists :many
SELECT id, name, user_id FROM lists ORDER BY name
`

func (q *Queries) Listlists(ctx context.Context) ([]List, error) {
	rows, err := q.db.QueryContext(ctx, listlists)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []List{}
	for rows.Next() {
		var i List
		if err := rows.Scan(&i.ID, &i.Name, &i.UserID); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
